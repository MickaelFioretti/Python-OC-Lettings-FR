name: CI/CD Pipeline

on:
  push:
    branches: [deploy-prod, deploy-test]
  pull_request:
  workflow_dispatch:

jobs:
  ci-django:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run database migrations
        run: |
          python manage.py migrate
      - name: Run flake8
        run: |
          flake8
      - name: Run tests
        run: |
          python manage.py test
          coverage run --source='.' manage.py test
          coverage report

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: ci-django
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/django-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/django-app:latest

  deploy-test:
    runs-on: [self-hosted, test]
    needs:
      - build-and-push-docker-image
    if: github.ref == 'refs/heads/deploy-test'
    steps:
      - name: Pull Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker pull $DOCKER_USERNAME/django-app:latest

      - name: Run Docker container
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker run -d -p 8000:8000 $DOCKER_USERNAME/django-app:latest

  deploy-prod:
    runs-on: [self-hosted, prod]
    needs:
      - ci-django
    if: github.ref == 'refs/heads/deploy-prod'
    steps:
      - name: Collect static files
        run: |
          python manage.py collectstatic

      - name: Pull Docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/django-app:latest

      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/django-app:latest
